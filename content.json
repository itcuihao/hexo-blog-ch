[{"title":"代码部署","date":"2017-07-13T05:59:03.000Z","path":"2017/07/13/代码部署/","text":"（一）介绍公司现在开发、测试、运维渐渐地有规模了，因此各个环境也应该相对独立。 开发提交代码到develop分支后，发布开发环境，查看修改效果，确认无误，然后提交PR。 运维拉取测试分支，发布测试环境，专供测试组使用。 之前很少接触部署环境，现在需要我部署开发环境，分成三个脚本，大致目录结构如下。 123456789101112131415161718192021222324252627root@ubuntu:/home/xg# tree -L 2.├── deploy.sh├── release.sh├── start.sh├── tmp│ ├── static│ └── web├── qddx│ ├── conf│ ├── qddx_out.log│ ├── qddx_web│ └── static├── qdlg│ ├── conf│ ├── qdlg_out.log│ ├── qdlg_web│ └── static├── tyxy│ ├── conf│ ├── tyxy_out.log│ ├── tyxy_web│ └── static└── xg_code ├── bin ├── pkg └── src deploy.sh 从码云拉取代码，前端代码拷贝到 tmp/static 目录下；后端代码在 xg_code 中，编译到 tmp/ 下，命名为 web； release.sh 选择需要部署的文件夹名称，qddx/qdlg/tyxy 根据文件夹名称，将前后端文件拷贝到目录下 start.sh 输入需要启动的选项的文件夹名称启动对应的项目 （二）脚本详细1.deploy.sh12345678910111213141516171819202122232425#!/bin/bashecho -e &quot;\\033[45;37m 部署测试学工系统\\033[0m&quot;xg=&quot;/home/xg/tmp&quot;code_path=&quot;/home/xg/xg_code/src&quot;echo -e &quot;\\033[33m 拉取代码ing ...\\033[0m&quot;cd $code_path/AntLinkCampusgit pull origin developecho -e &quot;\\033[33m 拷贝前端文件\\033[&quot;echo -e &quot;\\033[31m 拷贝ing... \\033[0m&quot;rm -rf $xg/static/*cp -a $code_path/AntLinkCampus/CampusUI/static $xgcd $xgecho -e &quot;\\033[33m 编译后端文件 \\033[0m&quot;echo -e &quot;\\033[31m 编译ing ... \\033[0m&quot;go build -i -v -ldflags &quot;-w -s&quot; -o $xg/web AntLinkCampus/CampusServer/apps/webecho -e &quot;\\033[32m 编译完成 \\033[0m&quot;echo -e &quot;\\033[32m 运行 release.sh 运行程序\\033[0m&quot; 2.release.sh1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556#!/bin/bashecho -e &quot;\\033[45;37m 发布测试学工系统\\033[0m&quot;echo -e &quot;\\033[34;42m 请选择学校（输入大学首字母）：\\033[0m&quot;echo -e &quot;\\033[33;44m 青岛大学：qddx \\033[0m&quot;echo -e &quot;\\033[33;44m 体育学院：tyxy\\033[0m&quot;echo -e &quot;\\033[33;44m 青岛理工大学：qdlg\\033[0m&quot;read -p &quot;输入：&quot; schoolif [ &quot;$school&quot;x = &quot;qddx&quot;x ]then echo -e &quot;\\033[32m开始部署青岛大学\\033[0m&quot;elif [ &quot;$school&quot;x = &quot;tyxy&quot;x ]then echo -e &quot;\\033[32m开始部署体育学院\\033[0m&quot;elif [ &quot;$school&quot;x = &quot;qdlg&quot;x ]then echo -e &quot;\\033[32m开始部署青岛理工大学\\033[0m&quot;else echo -e &quot;\\033[41;37m没有此学校\\033[0m&quot; exitfixg=&quot;/home/xg/&quot;$schooltmp=&quot;/home/xg/tmp&quot;echo -e &quot;\\033[33m 拷贝前端文件\\033[0m&quot;echo -e &quot;\\033[31m 拷贝ing... \\033[0m&quot;rm -rf $xg/static/*cp -a $tmp/static $xgecho -e &quot;\\033[33m 拷贝后端文件\\033[0m&quot;echo -e &quot;\\033[31m 拷贝ing... \\033[0m&quot;web_pid=$(pgrep -f $&#123;school&#125;_web)echo -e &quot;\\033[41;37m PID: $&#123;web_pid&#125; \\033[0m&quot;if [ &quot;$web_pid&quot;x = x ]then echo -e &quot;\\033[33m 移动后端文件\\033[0m&quot; cp $tmp/web $xg/$&#123;school&#125;_web echo -e &quot;\\033[41;37m 请执行 start.sh 运行程序\\033[0m&quot;elseecho -e &quot;\\033[33m 拷贝后端文件\\033[0m&quot; kill -9 $web_pid sleep 2s cp $tmp/web $xg/$&#123;school&#125;_web echo -e &quot;\\033[41;37m 请执行 start.sh 运行程序\\033[0m&quot;fi 3.start.sh123456789101112131415161718192021222324252627282930313233343536373839#!/bin/bashecho -e &quot;\\033[45;37m 启动测试学工系统\\033[0m&quot;echo -e &quot;\\033[34;42m 请选择学校（输入大学首字母）：\\033[0m&quot;echo -e &quot;\\033[33;44m 青岛大学：qddx \\033[0m&quot;echo -e &quot;\\033[33;44m 体育学院：tyxy\\033[0m&quot;echo -e &quot;\\033[33;44m 青岛理工大学：qdlg\\033[0m&quot;xg=&quot;/home/xg&quot;read -p &quot;输入：&quot; schoolnohupweb()&#123; cd $xg/$school nohup ./$&#123;school&#125;_web &gt; &quot;$&#123;school&#125;_out.log&quot; 2&gt;&amp;1 &amp; echo -e &quot;\\033[42;37m启动完成\\033[0m&quot;&#125;if [ &quot;$school&quot;x = &quot;qddx&quot;x ]then echo -e &quot;\\033[32m开始启动青岛大学\\033[0m&quot; nohupwebelif [ &quot;$school&quot;x = &quot;tyxy&quot;x ]then echo -e &quot;\\033[32m开始启动体育学院\\033[0m&quot; nohupwebelif [ &quot;$school&quot;x = &quot;qdlg&quot;x ]then echo -e &quot;\\033[32m开始启动青岛理工大学\\033[0m&quot; nohupwebelse echo -e &quot;\\033[41;37m没有此学校\\033[0m&quot; exitfi (三)Nginx代理123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106#青岛大学学工系统代理配置 server &#123; #全局域 listen 8088; server_name localhost; #charset koi8-r; #access_log logs/host.access.log main; location /nginx &#123; root html; index index.html index.htm; &#125; #后台服务 location /web &#123; proxy_pass http://127.0.0.1:8086; &#125; location /api &#123; proxy_pass http://127.0.0.1:8086; &#125; #前端web应用 location / &#123; root /home/xg/qddx/static; index login.html index.html index.htm; &#125; #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; &#125;#体育学院学工系统代理配置 server &#123; #全局域 listen 8089; server_name localhost; #charset koi8-r; #access_log logs/host.access.log main; location /nginx &#123; root html; index index.html index.htm; &#125; #后台服务 location /web &#123; proxy_pass http://127.0.0.1:8087; &#125; location /api &#123; proxy_pass http://127.0.0.1:8087; &#125; #前端web应用 location / &#123; root /home/xg/tyxy/static; index login.html index.html index.htm; &#125; #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; &#125;#青岛理工大学学工系统代理配置 server &#123; #全局域 listen 8084; server_name localhost; #charset koi8-r; #access_log logs/host.access.log main; location /nginx &#123; root html; index index.html index.htm; &#125; #后台服务 location /web &#123; proxy_pass http://127.0.0.1:8082; &#125; location /api &#123; proxy_pass http://127.0.0.1:8082; &#125; #前端web应用 location / &#123; root /home/xg/qdlg/static; index login.html index.html index.htm; &#125; #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; &#125; 现在项目已经可以启动了，这次对环境是如何部署的有了初步了解，也学习了 Shell的编写，nohup后台启动","tags":[{"name":"shell","slug":"shell","permalink":"https://itcuihao.github.io/blog/tags/shell/"}]},{"title":"写第一篇文章","date":"2017-03-22T09:40:02.000Z","path":"2017/03/22/写第一篇文章/","text":"12这是用hexo写的第一篇文章，长时间以来，一直想搭建一个自己的博客，作为自留地，记录生活，留作回念。感谢看过的那些教程，让我迈出一小步。","tags":[{"name":"test","slug":"test","permalink":"https://itcuihao.github.io/blog/tags/test/"}]},{"title":"Hello World","date":"2017-03-21T10:06:44.000Z","path":"2017/03/21/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Blog introduction1今天是2017年3月21日，下午看到hexo可以搭建静态博客，就搭建了探索的第一步，以后我会继续完善。 More info: Github from: 我的名字叫浩仔丶（haoc7）","tags":[]}]